package model.view;

import model.entity.XxTnaDefaultBuyerWiseEOImpl;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jun 27 11:52:17 BDT 2022
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class XxTnaDefaultBuyerWiseVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        TbwId {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getTbwId();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setTbwId((Number)value);
            }
        }
        ,
        BuyerId {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getBuyerId();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setBuyerId((Number)value);
            }
        }
        ,
        TnaDateId {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getTnaDateId();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setTnaDateId((Number)value);
            }
        }
        ,
        TnaDateName {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getTnaDateName();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setTnaDateName((String)value);
            }
        }
        ,
        DTnaDateId {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDTnaDateId();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setDTnaDateId((Number)value);
            }
        }
        ,
        DepandantTnaDateName {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDepandantTnaDateName();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setDepandantTnaDateName((String)value);
            }
        }
        ,
        DependencyType {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDependencyType();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setDependencyType((String)value);
            }
        }
        ,
        DayDifference {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDayDifference();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setDayDifference((Number)value);
            }
        }
        ,
        DependencyValue {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDependencyValue();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setDependencyValue((Integer)value);
            }
        }
        ,
        XxTnaDatesVO1 {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getXxTnaDatesVO1();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepedencyTypeLOV1 {
            public Object get(XxTnaDefaultBuyerWiseVORowImpl obj) {
                return obj.getDepedencyTypeLOV1();
            }

            public void put(XxTnaDefaultBuyerWiseVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(XxTnaDefaultBuyerWiseVORowImpl object);

        public abstract void put(XxTnaDefaultBuyerWiseVORowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TBWID = AttributesEnum.TbwId.index();
    public static final int BUYERID = AttributesEnum.BuyerId.index();
    public static final int TNADATEID = AttributesEnum.TnaDateId.index();
    public static final int TNADATENAME = AttributesEnum.TnaDateName.index();
    public static final int DTNADATEID = AttributesEnum.DTnaDateId.index();
    public static final int DEPANDANTTNADATENAME = AttributesEnum.DepandantTnaDateName.index();
    public static final int DEPENDENCYTYPE = AttributesEnum.DependencyType.index();
    public static final int DAYDIFFERENCE = AttributesEnum.DayDifference.index();
    public static final int DEPENDENCYVALUE = AttributesEnum.DependencyValue.index();
    public static final int XXTNADATESVO1 = AttributesEnum.XxTnaDatesVO1.index();
    public static final int DEPEDENCYTYPELOV1 = AttributesEnum.DepedencyTypeLOV1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public XxTnaDefaultBuyerWiseVORowImpl() {
    }

    /**
     * Gets XxTnaDefaultBuyerWiseEO entity object.
     * @return the XxTnaDefaultBuyerWiseEO
     */
    public XxTnaDefaultBuyerWiseEOImpl getXxTnaDefaultBuyerWiseEO() {
        return (XxTnaDefaultBuyerWiseEOImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for TBW_ID using the alias name TbwId.
     * @return the TBW_ID
     */
    public Number getTbwId() {
        return (Number)getAttributeInternal(TBWID);
    }

    /**
     * Sets <code>value</code> as attribute value for TBW_ID using the alias name TbwId.
     * @param value value to set the TBW_ID
     */
    public void setTbwId(Number value) {
        setAttributeInternal(TBWID, value);
    }

    /**
     * Gets the attribute value for BUYER_ID using the alias name BuyerId.
     * @return the BUYER_ID
     */
    public Number getBuyerId() {
        return (Number)getAttributeInternal(BUYERID);
    }

    /**
     * Sets <code>value</code> as attribute value for BUYER_ID using the alias name BuyerId.
     * @param value value to set the BUYER_ID
     */
    public void setBuyerId(Number value) {
        setAttributeInternal(BUYERID, value);
    }

    /**
     * Gets the attribute value for TNA_DATE_ID using the alias name TnaDateId.
     * @return the TNA_DATE_ID
     */
    public Number getTnaDateId() {
        return (Number)getAttributeInternal(TNADATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for TNA_DATE_ID using the alias name TnaDateId.
     * @param value value to set the TNA_DATE_ID
     */
    public void setTnaDateId(Number value) {
        setAttributeInternal(TNADATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute TnaDateName.
     * @return the TnaDateName
     */
    public String getTnaDateName() {
        return (String) getAttributeInternal(TNADATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute TnaDateName.
     * @param value value to set the  TnaDateName
     */
    public void setTnaDateName(String value) {
        setAttributeInternal(TNADATENAME, value);
    }

    /**
     * Gets the attribute value for D_TNA_DATE_ID using the alias name DTnaDateId.
     * @return the D_TNA_DATE_ID
     */
    public Number getDTnaDateId() {
        return (Number)getAttributeInternal(DTNADATEID);
    }

    /**
     * Sets <code>value</code> as attribute value for D_TNA_DATE_ID using the alias name DTnaDateId.
     * @param value value to set the D_TNA_DATE_ID
     */
    public void setDTnaDateId(Number value) {
        setAttributeInternal(DTNADATEID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute DepandantTnaDateName.
     * @return the DepandantTnaDateName
     */
    public String getDepandantTnaDateName() {
        return (String) getAttributeInternal(DEPANDANTTNADATENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute DepandantTnaDateName.
     * @param value value to set the  DepandantTnaDateName
     */
    public void setDepandantTnaDateName(String value) {
        setAttributeInternal(DEPANDANTTNADATENAME, value);
    }


    /**
     * Gets the attribute value for DAY_DIFFERENCE using the alias name DayDifference.
     * @return the DAY_DIFFERENCE
     */
    public Number getDayDifference() {
        return (Number)getAttributeInternal(DAYDIFFERENCE);
    }

    /**
     * Sets <code>value</code> as attribute value for DAY_DIFFERENCE using the alias name DayDifference.
     * @param value value to set the DAY_DIFFERENCE
     */
    public void setDayDifference(Number value) {
        setAttributeInternal(DAYDIFFERENCE, value);
        
        if(this.getDependencyType() == null){
            this.setDependencyValue(value.intValue());
        }
        else if(this.getDependencyType().equals("prior")){
            this.setDependencyValue(value.intValue()* -1);
        }
        else if(this.getDependencyType().equals("from")){
            this.setDependencyValue(value.intValue());
        }
      
    }


    /**
     * Gets the attribute value for DEPENDENCY_VALUE using the alias name DependencyValue.
     * @return the DEPENDENCY_VALUE
     */
    public Integer getDependencyValue() {
        return (Integer) getAttributeInternal(DEPENDENCYVALUE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENCY_VALUE using the alias name DependencyValue.
     * @param value value to set the DEPENDENCY_VALUE
     */
    public void setDependencyValue(Integer value) {
        setAttributeInternal(DEPENDENCYVALUE, value);
    }

    /**
     * Gets the attribute value for DEPENDENCY_TYPE using the alias name DependencyType.
     * @return the DEPENDENCY_TYPE
     */
    public String getDependencyType() {
        return (String) getAttributeInternal(DEPENDENCYTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for DEPENDENCY_TYPE using the alias name DependencyType.
     * @param value value to set the DEPENDENCY_TYPE
     */
    public void setDependencyType(String value) {
        setAttributeInternal(DEPENDENCYTYPE, value);
            
        
        if(value.equals("prior")){
            this.setDependencyValue(this.getDayDifference().intValue()*-1);
        }
        else if(value.equals("from")){
            this.setDependencyValue(this.getDayDifference().intValue());
        }
        
    }

    /**
     * Gets the view accessor <code>RowSet</code> XxTnaDatesVO1.
     */
    public RowSet getXxTnaDatesVO1() {
        return (RowSet)getAttributeInternal(XXTNADATESVO1);
    }


    /**
     * Gets the view accessor <code>RowSet</code> DepedencyTypeLOV1.
     */
    public RowSet getDepedencyTypeLOV1() {
        return (RowSet)getAttributeInternal(DEPEDENCYTYPELOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
